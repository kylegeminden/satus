//*** TABLE OF CONTENTS ***
//
// |-- Typography
// |-- Box
// |-- Borders
// |-- Shapes
// |-- Components
// |-- Grid
// |-- Browser Support
// |-- Helpers

// ==========================================================================
// |-- Typography
// ==========================================================================

// Requires inline-block or block for proper styling
.text-truncate() {
    overflow: hidden;
    max-width: 100%;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
}

.text-break() {
    word-break: break-all;
    word-break: break-word;
    word-wrap: break-word;
}

// http://blog.kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/
.hyphens(@mode: auto) {
    -ms-word-break: break-all;
    word-break: break-all;

    /* Non standard for webkit */
    word-break: break-word;

    -webkit-hyphens: @mode;
    -moz-hyphens: @mode;
    -ms-hyphens: @mode;
    hyphens: @mode;
}

// ==========================================================================
// |-- Box
// ==========================================================================


// .resize(VALUE); (both, horizontal, vertical)
// resize does not apply to blocks for which the overflow property is set to visible.
.resize(@direction: both) {
    overflow: auto;
    resize: @direction;
}

// ==========================================================================
// |-- Borders
// ==========================================================================

// .bordered(1px, solid, #bbb); can have multiples
.bordered(@width: 1px; @style: solid; @color: @lightGrey) {
    border-width : @width;
    border-style : @style;
    border-color : @color;
}

// dependent on less hat .border-radius mixin
// https://github.com/madebysource/lesshat/blob/master/README.md#border-radius
// use 0 if no output is desired
.radius(@radius) when not (@radius = 0) {
    .border-radius(@radius);
}

// ==========================================================================
// |-- Shapes
// ==========================================================================

// http://css-tricks.com/examples/ShapesOfCSS/

#triangle {

    // #triangle > .up(5px, 5px, #ccc)

    .up(@width; @height; @color) {
        width: 0;
        height: 0;
        border-left: @width solid transparent;
        border-right: @width solid transparent;
        border-bottom: @height solid @color;
    }

    .down(@width; @height; @color) {
        width: 0;
        height: 0;
        border-left: @width solid transparent;
        border-right: @width solid transparent;
        border-top: @height solid @color;
    }

    .left(@width; @height; @color) {
        width: 0;
        height: 0;
        border-top: @height solid transparent;
        border-right: @width solid @color;
        border-bottom: @height solid transparent;
    }

    .right(@width; @height; @color) {
        width: 0;
        height: 0;
        border-top: @height solid transparent;
        border-left: @width solid @color;
        border-bottom: @height solid transparent;
    }

    .top-left(@width; @height; @color) {
        width: 0;
        height: 0;
        border-top: @height solid @color;
        border-right: @width solid transparent;
    }

    .top-right(@width; @height; @color) {
        width: 0;
        height: 0;
        border-top: @height solid @color;
        border-left: @width solid transparent;
    }

    .bottom-left(@width; @height; @color) {
        width: 0;
        height: 0;
        border-bottom: @height solid @color;
        border-right: @width solid transparent;
    }

    .bottom-right(@width; @height; @color) {
        width: 0;
        height: 0;
        border-bottom: @height solid @color;
        border-left: @width solid transparent;
    }

}


// ==========================================================================
// |-- Components
// ==========================================================================

.alert-variant(@background; @border; @color) {
    background: @background;
    border-color: @border;
    color: @color;

    a {
        color: @color;
    }
}

.form-input-validation(@border-color; @color) {
    label {
        color: @color;
    }

    .form__input {
        border-color: @border-color;
    }
}

// ==========================================================================
// |-- Grid
// ==========================================================================

// contains row(s)
// .grid-container { .make-grid-container(1em); }
.make-grid-container(@gutter: @grid-xs-gutter) {
    padding-left: @gutter;
    padding-right: @gutter;
}

// contains the cells/columns
// .grid { .make-grid-row(1em); }
.make-grid-row(@gutter: @grid-xs-gutter) {
    &:extend(.u-clearfix all);
    margin-left: -@gutter;
}

.make-grid-cells() {
    float: left;
    width: 100%;
    min-height: 1px;
}

.make-grid-cell(@column; @total-columns: @grid-columns) {
    width: (100 / @total-columns) * @column * 1%;
}
.make-grid-cell-offset(@column; @total-columns: @grid-columns) {
    margin-left: (100 / @total-columns) * @column * 1%;
}

.make-grid-cell-push(@column; @total-columns: @grid-columns) {
    position: relative;
    left: (100 / @total-columns) * @column * 1%;
    right: auto;
}
.make-grid-cell-pull(@column; @total-columns: @grid-columns) {
    position: relative;
    right: (100 / @total-columns) * @column * 1%;
    left: auto;
}

// ==========================================================================
// |-- Browser Support
// ==========================================================================

// http://browserhacks.com/

// Media Queries and IE8 Support
.query-ie8(@query : @query-lg-min, @rules) {
    @media @query { @rules(); }
    @ie8:  ~"\0screen";
    @media @ie8 { @rules(); }
}

// IE8 Only
.ie8(@rules) {
    @ie8:  ~"\0screen";
    @media @ie8 { @rules(); }
}

// ==========================================================================
// |-- Helpers
// ==========================================================================


// Hide visually and from screen readers: h5bp.com/u

.hidden {
    display: none !important;
    visibility: hidden;
}

// Hide only visually, but have it available for screenreaders: h5bp.com/v

.visuallyhidden() {
    overflow: hidden;
    clip: rect(0 0 0 0);
    position: absolute;
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
}

// Extends the .visuallyhidden class to allow the element to be focusable when navigated to via
// the keyboard: h5bp.com/p
// Add mixin to :active and :focus pseudo classes

.visuallyhidden-focusable() {
    overflow: visible;
    clip: auto;
    position: static;
    width: auto;
    height: auto;
    margin: 0;
}

// Hide visually and from screen readers, but maintain layout

.invisible {
    visibility: hidden;
}

// Contain floats: h5bp.com/q
// Clearfix

.clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}
